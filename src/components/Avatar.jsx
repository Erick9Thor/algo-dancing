/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 avatar.glb 
*/

import { useAnimations, useGLTF } from "@react-three/drei";
import React, { useEffect, useRef, useMemo } from "react";
import { SkeletonUtils } from "three-stdlib";
import { useGraph } from "@react-three/fiber";

const Avatar = ({ animation, ...props }) => {
  const group = useRef();

  const { scene, animations } = useGLTF("/assets/models/avatar.glb");
  const clone = useMemo(() => SkeletonUtils.clone(scene), [scene]);
  const { nodes, materials } = useGraph(clone);

  const { actions } = useAnimations(animations, group);

  useEffect(() => {
    actions[animation]?.reset().fadeIn(0.24).play();
    return () => actions?.[animation]?.fadeOut(0.24);
  }, [animation]);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="avatar" rotation={[Math.PI / 2, 0, 0]}>
          <primitive object={nodes.Hips} />
          <skinnedMesh
            name="AvatarBody"
            geometry={nodes.AvatarBody.geometry}
            material={materials.AvatarBody}
            skeleton={nodes.AvatarBody.skeleton}
          />
          <skinnedMesh
            name="AvatarLeftCornea"
            geometry={nodes.AvatarLeftCornea.geometry}
            material={materials.AvatarLeftCornea}
            skeleton={nodes.AvatarLeftCornea.skeleton}
          />
          <skinnedMesh
            name="AvatarLeftEyeball"
            geometry={nodes.AvatarLeftEyeball.geometry}
            material={materials.AvatarLeftEyeball}
            skeleton={nodes.AvatarLeftEyeball.skeleton}
          />
          <skinnedMesh
            name="AvatarRightCornea"
            geometry={nodes.AvatarRightCornea.geometry}
            material={materials.AvatarRightCornea}
            skeleton={nodes.AvatarRightCornea.skeleton}
          />
          <skinnedMesh
            name="AvatarRightEyeball"
            geometry={nodes.AvatarRightEyeball.geometry}
            material={materials.AvatarRightEyeball}
            skeleton={nodes.AvatarRightEyeball.skeleton}
          />
          <skinnedMesh
            name="AvatarTeethUpper"
            geometry={nodes.AvatarTeethUpper.geometry}
            material={materials.AvatarTeethUpper}
            skeleton={nodes.AvatarTeethUpper.skeleton}
          />
          <skinnedMesh
            name="outfit_bottom"
            geometry={nodes.outfit_bottom.geometry}
            material={materials.outfit_bottom}
            skeleton={nodes.outfit_bottom.skeleton}
          />
          <skinnedMesh
            name="outfit_shoes"
            geometry={nodes.outfit_shoes.geometry}
            material={materials.outfit_shoes}
            skeleton={nodes.outfit_shoes.skeleton}
          />
          <skinnedMesh
            name="outfit_top"
            geometry={nodes.outfit_top.geometry}
            material={materials.outfit_top}
            skeleton={nodes.outfit_top.skeleton}
          />
          <skinnedMesh
            name="AvatarEyelashes"
            geometry={nodes.AvatarEyelashes.geometry}
            material={materials.AvatarEyelashes}
            skeleton={nodes.AvatarEyelashes.skeleton}
            morphTargetDictionary={nodes.AvatarEyelashes.morphTargetDictionary}
            morphTargetInfluences={nodes.AvatarEyelashes.morphTargetInfluences}
          />
          <skinnedMesh
            name="AvatarHead"
            geometry={nodes.AvatarHead.geometry}
            material={materials.AvatarHead}
            skeleton={nodes.AvatarHead.skeleton}
            morphTargetDictionary={nodes.AvatarHead.morphTargetDictionary}
            morphTargetInfluences={nodes.AvatarHead.morphTargetInfluences}
          />
          <skinnedMesh
            name="AvatarTeethLower"
            geometry={nodes.AvatarTeethLower.geometry}
            material={materials.AvatarTeethLower}
            skeleton={nodes.AvatarTeethLower.skeleton}
            morphTargetDictionary={nodes.AvatarTeethLower.morphTargetDictionary}
            morphTargetInfluences={nodes.AvatarTeethLower.morphTargetInfluences}
          />
        </group>
      </group>
    </group>
  );
};

useGLTF.preload("/assets/models/avatar.glb");

export default Avatar;
